if (typeof( SiebelAppFacade.BonusMatrixMainInfoRenderer ) === "undefined") {    SiebelJS.Namespace("SiebelAppFacade.BonusMatrixMainInfoRenderer");    define("siebel/custom/bm.main.info.renderer", ["siebel/phyrenderer"], function () {        SiebelAppFacade.BonusMatrixMainInfoRenderer = ( function () {            //var siebConsts  = SiebelJS.Dependency("SiebelApp.Constants");            function BonusMatrixMainInfoRenderer(pm) {                SiebelAppFacade.BonusMatrixMainInfoRenderer.superclass.constructor.call(this, pm);            }            SiebelJS.Extend(BonusMatrixMainInfoRenderer, SiebelAppFacade.PhysicalRenderer);            BonusMatrixMainInfoRenderer.prototype.ShowUI = function () {                SiebelAppFacade.BonusMatrixMainInfoRenderer.superclass.ShowUI.call(this);            };            BonusMatrixMainInfoRenderer.prototype.BindData = function () {                this.GetPM().AttachPMBinding("ExecuteUIUpdate", this.RefreshData, {scope: this});                this.RefreshData();            };            BonusMatrixMainInfoRenderer.prototype.EndLife = function () {                $("#s_" + this.GetPM().Get("GetFullId") + "_div").parent().undelegate();                SiebelAppFacade.BonusMatrixMainInfoRenderer.superclass.EndLife.call(this);            };            BonusMatrixMainInfoRenderer.prototype.RefreshData = function () {                var pm = this.GetPM();                var placeHolder = "s_" + pm.Get("GetFullId") + "_div";                //var appletId = "a_" + pm.Get("GetId");                var recordSet = pm.Get("GetRecordSet");                var controls = pm.Get("GetControls");                //console.log(controls);                //	var record in recordSet;                if (recordSet.length == 0) {                    $('#' + placeHolder).html('');//('<div class="bmSalesDataNotFound">Данные не найдены!</div>');                }                else {                    //обновление периода                    if (recordSet[0]) {                        //console.log(recordSet[0]);                        try{                            var startDate = new Date(recordSet[0]['Period Start Date']);                            var startDateText = ('0' + startDate.getDate()).slice(-2) + '.' + ('0' + (startDate.getMonth() + 1)).slice(-2) + '.' + startDate.getFullYear();                            var endDate = new Date(recordSet[0]['Period End Date']);                            var actualDate = new Date(recordSet[0]['Actual Date']);                            var endDateText = ('0' + endDate.getDate()).slice(-2) + '.' + ('0' + (endDate.getMonth() + 1)).slice(-2) + '.' + endDate.getFullYear();                            var actualDateText = ('0' + actualDate.getDate()).slice(-2) + '.' + ('0' + (actualDate.getMonth() + 1)).slice(-2) + '.' + actualDate.getFullYear();                            $('#bmPeriodDate').html('<div><div class="bm-calc-label">' + controls['ActualDate'].GetDisplayName() + ':</div><div class="bm-calc-field">' + actualDateText + '</div></div>' + '<div><div class="bm-calc-label">' + controls['PeriodStartDate'].GetDisplayName() + ':</div><div class="bm-calc-field">' + startDateText + '</div></div>' +                                '<div><div class="bm-calc-label">' + controls['PeriodEndDate'].GetDisplayName() + ':</div><div class="bm-calc-field">' + endDateText + '</div></div>');                        }catch(e){                            console.log(e);                        }                    }                    //обновление кнопок                    var activeButton = {                        background: 'url("../images/leto_gallery_nav.png")',                        'background-position': 'top left',                        width: '120px',                        height: '30px',                        border: 'none',                        color: '#fff',                        'text-shadow': 'none'                    }                    var inactiveButton = {                        background: 'url("../images/leto_gallery_nav.png")',                        'background-position': 'top right',                        width: '120px',                        height: '30px',                        border: 'none',                        'border-bottom': '1px #cc1f5b dashed',                        color: '#cc1f5b',                        'text-shadow': 'none'                    }                    // переключение 4-х кнопок                    $('#bmCurrentPeriodButton,#bmPreviousPeriodButton,#bmPreviousPeriod2Button, #bmPreviousPeriod3Button').children().addClass('myButton');                    if (recordSet[0]['Period'] == 'current') {                        $('#bmCurrentPeriodButton').children().addClass('active');                        $('#bmPreviousPeriodButton').children().removeClass('active');                        $('#bmPreviousPeriod2Button').children().removeClass('active');                        $('#bmPreviousPeriod3Button').children().removeClass('active');                    }                    if (recordSet[0]['Period'] == 'previous_1') {                        $('#bmCurrentPeriodButton').children().removeClass('active');                        $('#bmPreviousPeriodButton').children().addClass('active');                        $('#bmPreviousPeriod2Button').children().removeClass('active');                        $('#bmPreviousPeriod3Button').children().removeClass('active');                    }                    if (recordSet[0]['Period'] == 'previous_2') {                        $('#bmCurrentPeriodButton').children().removeClass('active');                        $('#bmPreviousPeriodButton').children().removeClass('active');                        $('#bmPreviousPeriod2Button').children().addClass('active');                        $('#bmPreviousPeriod3Button').children().removeClass('active');                    }                    if (recordSet[0]['Period'] == 'previous_3') {                        $('#bmCurrentPeriodButton').children().removeClass('active');                        $('#bmPreviousPeriodButton').children().removeClass('active');                        $('#bmPreviousPeriod2Button').children().removeClass('active');                        $('#bmPreviousPeriod3Button').children().addClass('active');                    }                    /*	else{                     $('#bmCurrentPeriodButton').children().removeClass('active');                     $('#bmPreviousPeriodButton').children().addClass('active');                     $('#bmPreviousPeriod2Button').children().addClass('active');                     $('#bmPreviousPeriod3Button').children().addClass('active');                     }                     */                    //$("#" + appletId).css('text-align', 'center');//выравнивание информации по центру.                }            }            return BonusMatrixMainInfoRenderer;        }());        return "SiebelAppFacade.BonusMatrixMainInfoRenderer";    });}