<html>
<head>
    <title>Method Addon.Barcode.ReadRect - Dynamic Web TWAIN 11</title>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <link href="../Styles/docs.css" type="text/css" rel="stylesheet" />
    <script src="../Scripts/common.js" type="text/javascript"></script>
</head>
<body id="docs-page">
    <div class='apiIndex'>
        <a href='../index.htm'>Index</a>&nbsp;&gt;&nbsp;
        <a href='../index.htm#002'>Addons</a>&nbsp;&gt;&nbsp;
        <a href='method%20Addon.Barcode.ReadRect.htm'>Addon.Barcode.ReadRect</a>
    </div>
    <div class='content' id='content'>
        <h1>Addon.Barcode.ReadRect()</h1>

        <h3>Description</h3>
        <p>Read barcode on a specified image loaded in Dynamic Web TWAIN.</p>


        <h3>Syntax</h3>
        Use it as an asynchronous method (recommended)
        <div class='spec'>
            <p>
                .Addon.Barcode.ReadRect(sImageIndex, left, top, right, bottom, format, [optionalAsyncSuccessFunc, optionalAsyncFailureFunc]);
            </p>
        </div>
        Or use it as a synchronous method.
        <p class="notice">This will return the recognition result (type: <code class="type">&lt;BarcodeResult&gt;</code>) directly.</p>
        <div class='spec'>
            <p>
                .Addon.Barcode.ReadRect(sImageIndex, left, top, right, bottom, format);
            </p>
        </div>
        <h3>Parameters</h3>
        <p>
            <code class="type">&lt;short&gt;</code> <code>sImageIndex</code>: specifies the index of the image to be read.<br />
            <code class="type">&lt;long&gt;</code> <code>left</code>: specifies the x-coordinate of the upper-left corner of the rectangle.<br />
            <code class="type">&lt;long&gt;</code> <code>top</code>: the y-coordinate of the upper-left corner of the rectangle.<br />
            <code class="type">&lt;long&gt;</code> <code>right</code>: specifies the x-coordinate of the lower-right corner of the rectangle.<br />
            <code class="type">&lt;long&gt;</code> <code>bottom</code>: y-coordinate of the lower-right corner of the rectangle.<br />
            <code class="type">&lt;long&gt;</code> <code>format</code>: specifies the index of the image to be read.<br />
            <table>
                <tr>
                    <th>Numeric Value</th>
                    <th>Value</th>
                </tr>
                <!--<tr>
                <td>-3</td>
                <td>EnumDWT_BarcodeFormat.Unknown</td>
            </tr>-->
            <tr>
                <td>182750</td>
                <td>EnumDWT_BarcodeFormat.All</td>
            </tr>
			<tr>
                <td>180702</td>
                <td>EnumDWT_BarcodeFormat.OneD</td>
            </tr>
            <!--<tr>
                <td>-1</td>
                <td>EnumDWT_BarcodeFormat.TwoD</td>
            </tr>-->
            <!--<tr>
                <td>1</td>
                <td>EnumDWT_BarcodeFormat.AZTEC</td>
            </tr>-->
            <tr>
                <td>2</td>
                <td>EnumDWT_BarcodeFormat.CODABAR</td>
            </tr>
                <tr>
                    <td>4</td>
                    <td>EnumDWT_BarcodeFormat.CODE_39</td>
                </tr>
                <tr>
                <td>8</td>
                <td>EnumDWT_BarcodeFormat.CODE_93</td>
            </tr>
                <tr>
                    <td>16</td>
                    <td>EnumDWT_BarcodeFormat.CODE_128</td>
                </tr>
                <!--<tr>
                <td>32</td>
                <td>EnumDWT_BarcodeFormat.DATAMATRIX</td>
            </tr>-->
            <tr>
                <td>64</td>
                <td>EnumDWT_BarcodeFormat.EAN_8</td>
            </tr>
            <tr>
                <td>128</td>
                <td>EnumDWT_BarcodeFormat.EAN_13</td>
            </tr>
            <tr>
                <td>256</td>
                <td>EnumDWT_BarcodeFormat.ITF</td>
            </tr>
            <!--<tr>
                <td>512</td>
                <td>EnumDWT_BarcodeFormat.MAXICODE</td>
            </tr>
            <tr>
                <td>1024</td>
                <td>EnumDWT_BarcodeFormat.PDF417</td>
            </tr>-->
            <tr>
                <td>2048</td>
                <td>EnumDWT_BarcodeFormat.QR_CODE</td>
            </tr>
            <!--<tr>
                <td>4096</td>
                <td>EnumDWT_BarcodeFormat.RSS_14</td>
            </tr>
            <tr>
                <td>8192</td>
                <td>EnumDWT_BarcodeFormat.RSS_EXPANDED</td>
            </tr>-->
			<tr>
                <td>16384</td>
                <td>EnumDWT_BarcodeFormat.UPC_A</td>
            </tr>
            <tr>
                <td>32768</td>
                <td>EnumDWT_BarcodeFormat.UPC_E</td>
            </tr>
            <!--<tr>
                <td>65536</td>
                <td>EnumDWT_BarcodeFormat.UPC_EAN_EXTENSION</td>
            </tr>-->
			<tr>
                <td>131072</td>
                <td>EnumDWT_BarcodeFormat.INDUSTRIAL_25</td>
            </tr>
            </table>
        </p>
        <p class="specialnotice">The following two parameters are optional. If either one exists or both exist, the method is asynchronous, otherwise it's synchronous.</p>
        <p><code class="type">&lt;OnBarcodeReadSuccess function&gt;</code> <code class="italic">optional</code> <code>optionalAsyncSuccessFunc(sImageIndex, result)</code>: callback function triggered when barcode reading succeeds. <br /></p>
        <p class="notice">
            Read the recoginition result here.<br />
        </p>
        <p><code class="type">&lt;OnBarcodeReadFailure function&gt;</code> <code class="italic">optional</code> <code>optionalAsyncFailureFunc(errorCode, errorString);</code>: callback function in case barcode reading fails.<br /></p>
        <p class="notice">
            Read the error message in this function.<br />
        </p>
        <p class="specialnotice">
            Please refer to the function prototype <a href="../Programmer%20Guide/Function%20Prototypes.htm#OnBarcodeReadSuccess"><code class="type">OnBarcodeReadSuccess</code></a> or <a href="../Programmer%20Guide/Function%20Prototypes.htm#OnBarcodeReadFailure"><code class="type">OnBarcodeReadFailure</code></a>.
        </p>
        <h3>Return value</h3>
        <p class="notice">Only valid when used synchronously or in the callback function optionalAsyncSuccessFunc.</p>
        <p>
            <code class="type">&lt;BarcodeResult&gt;</code> is returned when
            <ul>
                <li>the method is used synchronously.</li>
                <li>in the callback <code>optionalAsyncSuccessFunc(sImageIndex, result)</code> when the method is used asynchronously.</li>
            </ul>
        </p>
        <p>
            Methods available in <code class="type">&lt;BarcodeResult&gt;</code> object
            <table>
                <tr>
                    <th style="width:70px">Data Type</th>
                    <th>Method Name</th>
                    <th>Description</th>
                </tr>
                <tr>
                    <td><code class="type">&lt;long&gt;</code></td>
                    <td>GetErrorCode()</td>
                    <td>Returns the error code. Same as DWObject.ErrorCode</td>
                </tr>
                <tr>
                    <td><code class="type">&lt;string&gt;</code></td>
                    <td>GetErrorString()</td>
                    <td>Returns the error string. Same as DWObject.ErrorString</td>
                </tr>
                <tr>
                    <td><code class="type">&lt;long&gt;</code></td>
                    <td>GetCount()</td>
                    <td>Returns how many barcodes are found in the specified image</td>
                </tr>
                <tr>
                    <td><code class="type">&lt;string&gt;</code></td>
                    <td>GetContent()</td>
                    <td>Returns the barcode info in plain text or base64 string if the barcode represents binary data.</td>
                </tr>
                <tr>
                    <td><code class="type">&lt;int&gt;</code></td>
                    <td>GetFormat(index)</td>
                    <td>Returns the format of one (specified by index) of the barcodes on one image.</td>
                </tr>
                <tr>
                    <td><code class="type">&lt;int&gt;</code></td>
                    <td>GetContentType(index)</td>
                    <td>Returns the type of one (specified by index) of the barcodes on one image. 1 means binary, 0 means text.</td>
                </tr>
                <tr>
                    <td><code class="type">&lt;float&gt;</code></td>
                    <td>GetX1(index)</td>
                    <td>Returns the X coordinate of the top-left point (as shown below) of one (specified by index) of the barcodes on one image.</td>
                </tr>
                <tr>
                    <td><code class="type">&lt;float&gt;</code></td>
                    <td>GetX2(index)</td>
                    <td>Returns the X coordinate of top-right point (as shown below) of one (specified by index) of the barcodes on one image.</td>
                </tr>
                <tr>
                    <td><code class="type">&lt;float&gt;</code></td>
                    <td>GetX3(index)</td>
                    <td>Returns the X coordinate of bottom-right point (as shown below) of one (specified by index) of the barcodes on one image.</td>
                </tr>
                <tr>
                    <td><code class="type">&lt;float&gt;</code></td>
                    <td>GetX4(index)</td>
                    <td>Returns the X coordinate of  bottom-left (as shown below) of one (specified by index) of the barcodes on one image.</td>
                </tr>
                <tr>
                    <td><code class="type">&lt;float&gt;</code></td>
                    <td>GetY1(index)</td>
                    <td>Returns the Y coordinate of top-left point (as shown below) of one (specified by index) of the barcodes on one image.</td>
                </tr>
                <tr>
                    <td><code class="type">&lt;float&gt;</code></td>
                    <td>GetY2(index)</td>
                    <td>Returns the Y coordinate of top-right point (as shown below) of one (specified by index) of the barcodes on one image.</td>
                </tr>
                <tr>
                    <td><code class="type">&lt;float&gt;</code></td>
                    <td>GetY3(index)</td>
                    <td>Returns the Y coordinate of bottom-right point (as shown below) of one (specified by index) of the barcodes on one image.</td>
                </tr>
                <tr>
                    <td><code class="type">&lt;float&gt;</code></td>
                    <td>GetY4(index)</td>
                    <td>Returns the Y coordinate of bottom-left (as shown below) of one (specified by index) of the barcodes on one image.</td>
                </tr>
            </table>
        </p>
        <p><img alt="Barcode Sample Image" src="../Images/DWT_BarcodeSample.png" /></p>

        <h3>See also</h3>
        <p><a href="method%20Addon.Barcode.Read.htm">Addon.Barcode.Read()</a></p>
        <h3>Example</h3>
        <code class="language-javascript">
            <pre>
    var GetBarcodeInfo = function(sImageIndex, result){
        var count = result.GetCount();
        if (count == 0) {
            alert("No barcode found.");
            return;
        } else {
            for (i = 0; i < count; i++) {
                var text = result.GetContent(i);
                var x = result.GetX1(i);
                var y = result.GetY1(i);
                var format = result.GetFormat(i);
                var barcodeText = ("barcode[" + (i + 1) + "]: " + text + " with ");
                barcodeText += ("format: " + format + " was found at \n");
                barcodeText += ("x: " + x + " y:" + y + "\n");
                alert(barcodeText);
            }
        }
    };
    var GetErrorInfo = function(errorcode, errorstring){
        alert(errorstring);
    }
    DWObject.Addon.Barcode.ReadRect(0, 0, 0, 500, 1000, EnumDWT_BarcodeFormat.CODE_39, GetBarcodeInfo, GetErrorInfo);
            </pre>
        </code>
    </div>
</body>
</html>
